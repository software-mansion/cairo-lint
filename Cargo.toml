[workspace]
resolver = "2"
members = [
  "crates/cairo-lint-cli",
  "crates/cairo-lint-core",
  "xtask"
]

[workspace.package]
version = "2.9.2"
edition = "2021"
repository = "https://github.com/software-mansion/cairo-lint"
license-file = "LICENSE"

# Managing dependencies on crates from starkware-libs/cairo repository:
#
# The Cairo compiler is made of a bunch of crates that inter-depend on each other and have
# synchronised versioning.
# It is very important to use a single revision of these crates in the entire Cairo toolchain,
# which consists of Cairo compiler, Scarb, CairoLS and other tools.
# The toolchain is eventually built by Scarb, which depends on everything other as regular crates.
# To ensure that all crates in the toolchain use the same revision of Cairo crates, we use a patch
# mechanism that Cargo provides.
# Because Cargo requires patches to change the crate source, we have an unspoken contract that
# all tools *always* depend on some crates.io versions of Cairo crates and Scarb uses
# [patch.crates.io] table to set final git revision for everything.
#
# To keep our Cargo.toml following this contract, always use `cargo xtask upgrade`
# for manipulating these dependencies.
[workspace.dependencies]
annotate-snippets = "0.11.5"
anyhow = "1.0.95"
cairo-lang-compiler = "2.10"
cairo-lang-defs = "2.10"
cairo-lang-diagnostics = "2.10"
cairo-lang-filesystem = "2.10"
cairo-lang-semantic = "2.10"
cairo-lang-starknet = "2.10"
cairo-lang-syntax = "2.10"
cairo-lang-test-plugin = "2.10"
cairo-lang-utils = "2.10"
clap = { version = "4.5.27", features = ["derive"]}
ctor = "0.2.9"
if_chain = "1.0.2"
insta = "1.41.0"
itertools = "0.13.0"
log = "0.4.25"
num-bigint = "0.4.6"
pretty_assertions = "1.4.1"
smol_str = { version = "0.2.0", features = ["serde"] }
test-case = "3.0"

# Here we specify real dependency specifications for Cairo crates *if* currently we want to use
# a particular unreleased commit (which is frequent mid-development).
# We list all Cairo crates that go into Scarb's compilation unit even if Scarb itself does not depend
# on some of them directly.
# This ensures no duplicate instances of Cairo crates are pulled in by mistake.
[patch.crates-io]
