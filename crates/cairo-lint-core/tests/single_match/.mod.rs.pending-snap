{"run_id":"1738764399-969217000","line":509,"new":{"module_name":"main__single_match","snapshot_name":"comprehensive_match_allowed_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":509,"expression":"formatted_diags"},"snapshot":"error: `allow` attribute argument not supported.\n --> lib.cairo:4:12\n  |\n4 |     #[allow(single_match)]\n  |            ^^^^^^^^^^^^^^\n  |"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":""}}
{"run_id":"1738764399-969217000","line":481,"new":{"module_name":"main__single_match","snapshot_name":"comprehensive_match_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":481,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for an equality check. Consider using `if`\n --> lib.cairo:4:5\n  |\n4 | /     match variable {\n5 | |         Option::None => println!(\"None\"),\n6 | |         Option::Some => (),\n7 | |     };\n  | |_____-\n  |"}}
{"run_id":"1738764399-969217000","line":496,"new":null,"old":null}
{"run_id":"1738764399-969217000","line":392,"new":{"module_name":"main__single_match","snapshot_name":"destructuring_comprehensive_match_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":392,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n --> lib.cairo:4:5\n  |\n4 | /     match variable {\n5 | |         Option::Some(a) => println!(\"{a}\"),\n6 | |         Option::None => (),\n7 | |     };\n  | |_____-\n  |"}}
{"run_id":"1738764399-969217000","line":407,"new":{"module_name":"main__single_match","snapshot_name":"destructuring_comprehensive_match_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":407,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    match variable {\n        Option::Some(a) => println!(\"{a}\"),\n        Option::None => (),\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    if let Option::Some(a) = variable {\n        println!(\"{a}\")\n    };\n}"}}
{"run_id":"1738764399-969217000","line":369,"new":null,"old":null}
{"run_id":"1738764399-969217000","line":375,"new":null,"old":null}
{"run_id":"1738764399-969217000","line":304,"new":{"module_name":"main__single_match","snapshot_name":"destructuring_match_twisted_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":304,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n  --> lib.cairo:4:5\n   |\n 4 | /     match variable {\n 5 | |         // This match is invalid hence no diag/fix for this one\n...  |\n10 | |         _ => (),\n11 | |     };\n   | |_____-\n   |"}}
{"run_id":"1738764399-969217000","line":336,"new":{"module_name":"main__single_match","snapshot_name":"destructuring_match_twisted_differently_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":336,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n  --> lib.cairo:8:28\n   |\n 8 |           Option::Some(a) => match a {\n   |  ____________________________-\n 9 | |             Option::Some(b) => println!(\"{b}\"),\n10 | |             _ => (),\n11 | |         },\n   | |_________-\n   |"}}
{"run_id":"1738764399-969217000","line":320,"new":{"module_name":"main__single_match","snapshot_name":"destructuring_match_twisted_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":320,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(Option::Some(1_felt252));\n    match variable {\n        // This match is invalid hence no diag/fix for this one\n        Option::Some(a) => match a {\n            _ => (),\n            Option::Some(b) => println!(\"{b}\"),\n        },\n        _ => (),\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(Option::Some(1_felt252));\n    // This match is invalid hence no diag/fix for this one\n    if let Option::Some(a) = variable {\n        match a {\n            _ => (),\n            Option::Some(b) => println!(\"{b}\"),\n        }\n    };\n}"}}
{"run_id":"1738764399-969217000","line":352,"new":{"module_name":"main__single_match","snapshot_name":"destructuring_match_twisted_differently_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":352,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(Option::Some(1_felt252));\n    // Invalid match so no diag/fix for this one\n    match variable {\n        _ => (),\n        // This one is valid\n        Option::Some(a) => match a {\n            Option::Some(b) => println!(\"{b}\"),\n            _ => (),\n        },\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(Option::Some(1_felt252));\n    // Invalid match so no diag/fix for this one\n    match variable {\n        _ => (),\n        // This one is valid\n        Option::Some(a) => if let Option::Some(b) = a {\n    println!(\"{b}\")\n},\n    };\n}"}}
{"run_id":"1738764399-969217000","line":271,"new":{"module_name":"main__single_match","snapshot_name":"nested_destructuring_match_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":271,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n --> lib.cairo:6:28\n  |\n6 |           Option::Some(a) => match a {\n  |  ____________________________-\n7 | |             Option::Some(b) => println!(\"{b}\"),\n8 | |             _ => (),\n9 | |         },\n  | |_________-\n  |\nwarning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n  --> lib.cairo:5:5\n   |\n 5 | /     match variable {\n 6 | |         Option::Some(a) => match a {\n...  |\n10 | |         _ => (),\n11 | |     };\n   | |_____-\n   |"}}
{"run_id":"1738764399-969217000","line":297,"new":null,"old":null}
{"run_id":"1738764399-969217000","line":419,"new":null,"old":null}
{"run_id":"1738764399-969217000","line":425,"new":null,"old":null}
{"run_id":"1738764399-969217000","line":197,"new":null,"old":null}
{"run_id":"1738764399-969217000","line":170,"new":{"module_name":"main__single_match","snapshot_name":"simple_destructuring_match_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":170,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n --> lib.cairo:4:5\n  |\n4 | /     match variable {\n5 | |         Option::Some(a) => println!(\"{a}\"),\n6 | |         _ => (),\n7 | |     };\n  | |_____-\n  |"}}
{"run_id":"1738764399-969217000","line":185,"new":{"module_name":"main__single_match","snapshot_name":"simple_destructuring_match_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":185,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    match variable {\n        Option::Some(a) => println!(\"{a}\"),\n        _ => (),\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    if let Option::Some(a) = variable {\n        println!(\"{a}\")\n    };\n}"}}
{"run_id":"1738764399-969217000","line":203,"new":null,"old":null}
{"run_id":"1738764399-969217000","line":460,"new":null,"old":null}
{"run_id":"1738764399-969217000","line":466,"new":null,"old":null}
{"run_id":"1738764399-969217000","line":217,"new":{"module_name":"main__single_match","snapshot_name":"simple_destructuring_match_with_scope_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":217,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n --> lib.cairo:4:5\n  |\n4 | /     match variable {\n5 | |         Option::Some(a) => println!(\"{a}\"),\n6 | |         _ => {},\n7 | |     };\n  | |_____-\n  |"}}
{"run_id":"1738764399-969217000","line":232,"new":{"module_name":"main__single_match","snapshot_name":"simple_destructuring_match_with_scope_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":232,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    match variable {\n        Option::Some(a) => println!(\"{a}\"),\n        _ => {},\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    if let Option::Some(a) = variable {\n        println!(\"{a}\")\n    };\n}"}}
{"run_id":"1738764399-969217000","line":438,"new":null,"old":null}
{"run_id":"1738764399-969217000","line":444,"new":null,"old":null}
{"run_id":"1738764399-969217000","line":244,"new":{"module_name":"main__single_match","snapshot_name":"simple_destructuring_match_with_unit_in_scope_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":244,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n --> lib.cairo:4:5\n  |\n4 | /     match variable {\n5 | |         Option::Some(a) => println!(\"{a}\"),\n6 | |         _ => { () },\n7 | |     };\n  | |_____-\n  |"}}
{"run_id":"1738764399-969217000","line":259,"new":{"module_name":"main__single_match","snapshot_name":"simple_destructuring_match_with_unit_in_scope_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":259,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    match variable {\n        Option::Some(a) => println!(\"{a}\"),\n        _ => { () },\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    if let Option::Some(a) = variable {\n        println!(\"{a}\")\n    };\n}"}}
{"run_id":"1738858022-855259000","line":515,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":509,"new":{"module_name":"main__single_match","snapshot_name":"comprehensive_match_allowed_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":509,"expression":"formatted_diags"},"snapshot":"error: `allow` attribute argument not supported.\n --> lib.cairo:4:12\n  |\n4 |     #[allow(single_match)]\n  |            ^^^^^^^^^^^^^^\n  |"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":""}}
{"run_id":"1738858022-855259000","line":481,"new":{"module_name":"main__single_match","snapshot_name":"comprehensive_match_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":481,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for an equality check. Consider using `if`\n --> lib.cairo:4:5\n  |\n4 | /     match variable {\n5 | |         Option::None => println!(\"None\"),\n6 | |         Option::Some => (),\n7 | |     };\n  | |_____-\n  |"}}
{"run_id":"1738858022-855259000","line":496,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":392,"new":{"module_name":"main__single_match","snapshot_name":"destructuring_comprehensive_match_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":392,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n --> lib.cairo:4:5\n  |\n4 | /     match variable {\n5 | |         Option::Some(a) => println!(\"{a}\"),\n6 | |         Option::None => (),\n7 | |     };\n  | |_____-\n  |"}}
{"run_id":"1738858022-855259000","line":407,"new":{"module_name":"main__single_match","snapshot_name":"destructuring_comprehensive_match_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":407,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    match variable {\n        Option::Some(a) => println!(\"{a}\"),\n        Option::None => (),\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    if let Option::Some(a) = variable {\n        println!(\"{a}\")\n    };\n}"}}
{"run_id":"1738858022-855259000","line":369,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":375,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":304,"new":{"module_name":"main__single_match","snapshot_name":"destructuring_match_twisted_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":304,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n  --> lib.cairo:4:5\n   |\n 4 | /     match variable {\n 5 | |         // This match is invalid hence no diag/fix for this one\n...  |\n10 | |         _ => (),\n11 | |     };\n   | |_____-\n   |"}}
{"run_id":"1738858022-855259000","line":352,"new":{"module_name":"main__single_match","snapshot_name":"destructuring_match_twisted_differently_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":352,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(Option::Some(1_felt252));\n    // Invalid match so no diag/fix for this one\n    match variable {\n        _ => (),\n        // This one is valid\n        Option::Some(a) => match a {\n            Option::Some(b) => println!(\"{b}\"),\n            _ => (),\n        },\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(Option::Some(1_felt252));\n    // Invalid match so no diag/fix for this one\n    match variable {\n        _ => (),\n        // This one is valid\n        Option::Some(a) => if let Option::Some(b) = a {\n    println!(\"{b}\")\n},\n    };\n}"}}
{"run_id":"1738858022-855259000","line":336,"new":{"module_name":"main__single_match","snapshot_name":"destructuring_match_twisted_differently_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":336,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n  --> lib.cairo:8:28\n   |\n 8 |           Option::Some(a) => match a {\n   |  ____________________________-\n 9 | |             Option::Some(b) => println!(\"{b}\"),\n10 | |             _ => (),\n11 | |         },\n   | |_________-\n   |"}}
{"run_id":"1738858022-855259000","line":271,"new":{"module_name":"main__single_match","snapshot_name":"nested_destructuring_match_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":271,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n --> lib.cairo:6:28\n  |\n6 |           Option::Some(a) => match a {\n  |  ____________________________-\n7 | |             Option::Some(b) => println!(\"{b}\"),\n8 | |             _ => (),\n9 | |         },\n  | |_________-\n  |\nwarning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n  --> lib.cairo:5:5\n   |\n 5 | /     match variable {\n 6 | |         Option::Some(a) => match a {\n...  |\n10 | |         _ => (),\n11 | |     };\n   | |_____-\n   |"}}
{"run_id":"1738858022-855259000","line":320,"new":{"module_name":"main__single_match","snapshot_name":"destructuring_match_twisted_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":320,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(Option::Some(1_felt252));\n    match variable {\n        // This match is invalid hence no diag/fix for this one\n        Option::Some(a) => match a {\n            _ => (),\n            Option::Some(b) => println!(\"{b}\"),\n        },\n        _ => (),\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(Option::Some(1_felt252));\n    // This match is invalid hence no diag/fix for this one\n    if let Option::Some(a) = variable {\n        match a {\n            _ => (),\n            Option::Some(b) => println!(\"{b}\"),\n        }\n    };\n}"}}
{"run_id":"1738858022-855259000","line":297,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":419,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":425,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":170,"new":{"module_name":"main__single_match","snapshot_name":"simple_destructuring_match_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":170,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n --> lib.cairo:4:5\n  |\n4 | /     match variable {\n5 | |         Option::Some(a) => println!(\"{a}\"),\n6 | |         _ => (),\n7 | |     };\n  | |_____-\n  |"}}
{"run_id":"1738858022-855259000","line":185,"new":{"module_name":"main__single_match","snapshot_name":"simple_destructuring_match_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":185,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    match variable {\n        Option::Some(a) => println!(\"{a}\"),\n        _ => (),\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    if let Option::Some(a) = variable {\n        println!(\"{a}\")\n    };\n}"}}
{"run_id":"1738858022-855259000","line":197,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":203,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":460,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":466,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":217,"new":{"module_name":"main__single_match","snapshot_name":"simple_destructuring_match_with_scope_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":217,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n --> lib.cairo:4:5\n  |\n4 | /     match variable {\n5 | |         Option::Some(a) => println!(\"{a}\"),\n6 | |         _ => {},\n7 | |     };\n  | |_____-\n  |"}}
{"run_id":"1738858022-855259000","line":232,"new":{"module_name":"main__single_match","snapshot_name":"simple_destructuring_match_with_scope_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":232,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    match variable {\n        Option::Some(a) => println!(\"{a}\"),\n        _ => {},\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    if let Option::Some(a) = variable {\n        println!(\"{a}\")\n    };\n}"}}
{"run_id":"1738858022-855259000","line":438,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":444,"new":null,"old":null}
{"run_id":"1738858022-855259000","line":244,"new":{"module_name":"main__single_match","snapshot_name":"simple_destructuring_match_with_unit_in_scope_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":244,"expression":"formatted_diags"},"snapshot":""},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n --> lib.cairo:4:5\n  |\n4 | /     match variable {\n5 | |         Option::Some(a) => println!(\"{a}\"),\n6 | |         _ => { () },\n7 | |     };\n  | |_____-\n  |"}}
{"run_id":"1738858022-855259000","line":259,"new":{"module_name":"main__single_match","snapshot_name":"simple_destructuring_match_with_unit_in_scope_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":259,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    match variable {\n        Option::Some(a) => println!(\"{a}\"),\n        _ => { () },\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    if let Option::Some(a) = variable {\n        println!(\"{a}\")\n    };\n}"}}
{"run_id":"1738858697-866846000","line":515,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":509,"new":{"module_name":"main__single_match","snapshot_name":"comprehensive_match_allowed_diagnostics","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":509,"expression":"formatted_diags"},"snapshot":"warning: Plugin diagnostic: you seem to be trying to use `match` for an equality check. Consider using `if`\n --> lib.cairo:5:5\n  |\n5 | /     match variable {\n6 | |         Option::None => println!(\"None\"),\n7 | |         Option::Some => (),\n8 | |     };\n  | |_____-\n  |\nerror: `allow` attribute argument not supported.\n --> lib.cairo:4:12\n  |\n4 |     #[allow(single_match)]\n  |            ^^^^^^^^^^^^^^\n  |"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":""}}
{"run_id":"1738858697-866846000","line":481,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":496,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":392,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":407,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":369,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":375,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":304,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":336,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":352,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":320,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":271,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":297,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":419,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":425,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":170,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":197,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":185,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":203,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":460,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":466,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":217,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":438,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":232,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":444,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":244,"new":null,"old":null}
{"run_id":"1738858697-866846000","line":259,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":509,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":481,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":515,"new":{"module_name":"main__single_match","snapshot_name":"comprehensive_match_allowed_fixer","metadata":{"source":"crates/cairo-lint-core/tests/single_match/mod.rs","assertion_line":515,"expression":"code"},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    #[allow(equality_match)]\n    match variable {\n        Option::None => println!(\"None\"),\n        Option::Some => (),\n    };\n}"},"old":{"module_name":"main__single_match","metadata":{},"snapshot":"fn main() {\n    let variable = Option::Some(1_felt252);\n    #[allow(single_match)]\n    match variable {\n        Option::None => println!(\"None\"),\n        Option::Some => (),\n    };\n}"}}
{"run_id":"1738859073-862603000","line":496,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":407,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":392,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":369,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":304,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":375,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":336,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":320,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":352,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":271,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":419,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":297,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":425,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":170,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":185,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":197,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":203,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":460,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":466,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":217,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":232,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":444,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":438,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":244,"new":null,"old":null}
{"run_id":"1738859073-862603000","line":259,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":515,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":509,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":481,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":496,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":392,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":407,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":369,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":375,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":304,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":352,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":336,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":320,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":297,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":271,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":419,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":425,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":185,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":170,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":197,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":203,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":466,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":460,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":217,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":438,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":444,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":232,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":244,"new":null,"old":null}
{"run_id":"1738859416-381850000","line":259,"new":null,"old":null}
